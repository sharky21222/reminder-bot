package main

import (
	"log"
	"net/http"
	"os"
	"regexp"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func main() {
	token := os.Getenv("TELEGRAM_BOT_TOKEN")
	if token == "" {
		log.Fatal("TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω")
	}

	bot, err := tgbotapi.NewBotAPI(token)
	if err != nil {
		log.Fatal(err)
	}

	// Health-check
	http.HandleFunc("/healthz", func(w http.ResponseWriter, r *http.Request) {
		w.WriteHeader(200)
		w.Write([]byte("OK"))
	})
	go http.ListenAndServe(":8081", nil)

	// –ö–Ω–æ–ø–∫–∏
	menu := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("/start"),
			tgbotapi.NewKeyboardButton("/help"),
		),
	)

	// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	updates := bot.GetUpdatesChan(u)

	re := regexp.MustCompile(`(?i)–Ω–∞–ø–æ–º–Ω–∏.*—á–µ—Ä–µ–∑ (\d+[smhd]) (.+)`)

	for upd := range updates {
		if upd.Message == nil {
			continue
		}

		msgText := upd.Message.Text

		// /start
		if msgText == "/start" {
			msg := tgbotapi.NewMessage(upd.Message.Chat.ID, "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏.")
			msg.ReplyMarkup = menu
			bot.Send(msg)
			continue
		}

		// /help
		if msgText == "/help" {
			bot.Send(tgbotapi.NewMessage(upd.Message.Chat.ID,
				`–ù–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Ä–æ–¥–µ:
"–Ω–∞–ø–æ–º–Ω–∏ –º–Ω–µ —á–µ—Ä–µ–∑ 10s —Å–¥–µ–ª–∞—Ç—å –∑–∞—Ä—è–¥–∫—É"
"–Ω–∞–ø–æ–º–Ω–∏ —á–µ—Ä–µ–∑ 5m –ø–æ–∑–≤–æ–Ω–∏—Ç—å –¥—Ä—É–≥—É"`))
			continue
		}

		// –û–±—Ä–∞–±–æ—Ç–∫–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
		matches := re.FindStringSubmatch(msgText)
		if len(matches) == 3 {
			durationStr := matches[1]
			note := matches[2]

			d, err := time.ParseDuration(durationStr)
			if err != nil {
				bot.Send(tgbotapi.NewMessage(upd.Message.Chat.ID, "–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ (–ø—Ä–∏–º–µ—Ä: 10s, 5m, 1h)"))
				continue
			}

			bot.Send(tgbotapi.NewMessage(upd.Message.Chat.ID, "–û–∫, –Ω–∞–ø–æ–º–Ω—é —á–µ—Ä–µ–∑ "+durationStr))

			go func(id int64, delay time.Duration, msg string) {
				time.Sleep(delay)
				bot.Send(tgbotapi.NewMessage(id, "üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: "+msg))
			}(upd.Message.Chat.ID, d, note)

		} else {
			bot.Send(tgbotapi.NewMessage(upd.Message.Chat.ID, "–ù–µ –ø–æ–Ω—è–ª. –ù–∞–∂–º–∏ /help –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞"))
		}
	}
}
