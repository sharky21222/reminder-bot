package main

import (
	"log"
	"net/http"
	"os"
	"strings"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func main() {
	token := os.Getenv("TELEGRAM_BOT_TOKEN")
	if token == "" {
		log.Fatal("TELEGRAM_BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω")
	}

	bot, err := tgbotapi.NewBotAPI(token)
	if err != nil {
		log.Fatal(err)
	}

	http.HandleFunc("/healthz", func(w http.ResponseWriter, r *http.Request) {
		w.WriteHeader(200)
		w.Write([]byte("OK"))
	})
	go http.ListenAndServe(":8081", nil)

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	updates := bot.GetUpdatesChan(u)

	for upd := range updates {
		if upd.Message == nil {
			continue
		}

		msg := upd.Message.Text
		chatID := upd.Message.Chat.ID

		switch {
		case msg == "/start":
			bot.Send(tgbotapi.NewMessage(chatID, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞. –ù–∞–ø–∏—à–∏ /help –¥–ª—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π."))
		case msg == "/help":
			bot.Send(tgbotapi.NewMessage(chatID, "–ù–∞–ø–∏—à–∏: /remind <–≤—Ä–µ–º—è> <—Ç–µ–∫—Å—Ç>\n–ü—Ä–∏–º–µ—Ä: /remind 10s –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—á—Ç—É"))
		case msg == "/time":
			now := time.Now().Format("02 Jan 2006 15:04:05")
			bot.Send(tgbotapi.NewMessage(chatID, "üïí –í—Ä–µ–º—è —Å–µ—Ä–≤–µ—Ä–∞: "+now))
		case strings.HasPrefix(msg, "/remind"):
			parts := strings.SplitN(msg, " ", 3)
			if len(parts) < 3 {
				bot.Send(tgbotapi.NewMessage(chatID, "–ò—Å–ø–æ–ª—å–∑—É–π: /remind <–≤—Ä–µ–º—è> <—Ç–µ–∫—Å—Ç>"))
				continue
			}
			d, err := time.ParseDuration(parts[1])
			if err != nil {
				bot.Send(tgbotapi.NewMessage(chatID, "‚õî –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: 10s, 5m, 1h"))
				continue
			}
			note := parts[2]
			bot.Send(tgbotapi.NewMessage(chatID, "üìù –û–∫, –Ω–∞–ø–æ–º–Ω—é —á–µ—Ä–µ–∑ "+parts[1]))

			go func(id int64, delay time.Duration, msg string) {
				time.Sleep(delay)
				bot.Send(tgbotapi.NewMessage(id, "‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: "+msg))
			}(chatID, d, note)
		}
	}
}
